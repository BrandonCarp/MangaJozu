// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  auth0Id   String   @unique
  userName  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Order     Order[]
  // Cart      Cart[]
  // Invoice   Invoice[]
}

// npx prisma generate
// npx prisma migrate dev

model Anime {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String
  coverImage  String
  createdAt   DateTime @default(now())
  trailer     String?
  // updatedAt   DateTime? @updatedAt
  // author      String
  // Cart        Cart?     @relation(fields: [cartId], references: [id])
  // cartId      Int?
}

// model Author {
//   id        Int      @id @default(autoincrement())
//   name      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   // Manga     Manga[]
// }

// model Chapter {
//   id            Int      @id @default(autoincrement())
//   chapterNumber Int
//   title         String   @db.VarChar(255)
//   releaseDate   DateTime
//   pages         Int
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   manga         Manga    @relation(fields: [mangaId], references: [id])
//   mangaId       Int
// }

// model Cart {
//   id         Int      @id @default(autoincrement())
//   userId     Int
//   items      Anime[]
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
//   customer   Customer @relation(fields: [customerId], references: [id])
//   customerId Int
// }

// model Order {
//   id         Int       @id @default(autoincrement())
//   userId     Int
//   items      String[]
//   totalPrice Int
//   orderDate  DateTime
//   status     String
//   createdAt  DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt
//   customer   Customer  @relation(fields: [customerId], references: [id])
//   customerId Int
//   Invoice    Invoice[]
// }

// model Invoice {
//   id         Int      @id @default(autoincrement())
//   items      String
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
//   order      Order    @relation(fields: [orderId], references: [id])
//   orderId    Int
//   customer   Customer @relation(fields: [customerId], references: [id])
//   customerId Int
// }
